name: Green CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  greenframeci:
    runs-on: ubuntu-latest

    env:
      Solution_Name: GreenCoding.sln   

    steps:
    - name: Initialize Energy Estimation
      uses: green-coding-solutions/eco-ci-energy-estimation@v3 # use hash or @vX here (See note below)
      with:
        task: start-measurement
        # continue-on-error: true # recommended setting for production. See notes below.

    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Measurement - Checkout Repo 
      uses: green-coding-solutions/eco-ci-energy-estimation@v3 # use hash or @vX here (See note below)
      with:
        task: get-measurement
        label: 'repo checkout'

    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    - name: Publish the Blazor app
      run: dotnet publish -c Release -o ./publish


    - name: Measurement - Restore build publish 
      uses: green-coding-solutions/eco-ci-energy-estimation@v3 # use hash or @vX here (See note below)
      with:
        task: get-measurement
        label: 'restore build publish'

    - name: Start the Blazor app
      run: |
        nohup dotnet ./publish/Blazor.dll > blazor_app.log 2>&1 &
        echo "Waiting for Blazor app to start..."
      env:
        ASPNETCORE_URLS: "http://localhost:5000" # Ensure your app starts on this URL

    - name: Check if Blazor app is running
      run: |
        for i in {1..10}; do
          curl -v http://localhost:5000 && break
          echo "Blazor app is not up yet. Retrying in 5 seconds..."
          sleep 5
        done

    - name: Measurement - starting the app 
      uses: green-coding-solutions/eco-ci-energy-estimation@v3 # use hash or @vX here (See note below)
      with:
        task: get-measurement
        label: 'starting the app'

    - name: Install Greenframe
      run: curl https://assets.greenframe.io/install.sh | bash

    - name: Analyze with Greenframe
      run: greenframe analyze
      env:
        GREENFRAME_SECRET_TOKEN: ${{ secrets.GREENFRAME_SECRET_TOKEN }}
    
    - name: Measurement - greenframe analytics 
      uses: green-coding-solutions/eco-ci-energy-estimation@v3 # use hash or @vX here (See note below)
      with:
        task: get-measurement
        label: 'greenframe analytics '

    - name: Show Energy Results
      uses: green-coding-solutions/eco-ci-energy-estimation@v3 # use hash or @vX here (See note below)
      with:
        task: display-results

    - name: Upload Greenframe results
      uses: actions/upload-artifact@v2
      with:
        name: greenframe-results
        path: greenframe-results/
