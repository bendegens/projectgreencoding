name: Green CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  greenframeci:
    runs-on: ubuntu-latest

    env:
      Solution_Name: GreenCoding.sln   

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    - name: Publish the Blazor app
      run: dotnet publish -c Release -o ./publish

    - name: Start the Blazor app
      run: |
        nohup dotnet ./publish/Blazor.dll > blazor_app.log 2>&1 &
        echo "Waiting for Blazor app to start..."
        sleep 30 # Adjust this if needed
      env:
        ASPNETCORE_URLS: "http://localhost:5000" # Ensure your app starts on this URL

    - name: Check if Blazor app is running
      run: |
        for i in {1..10}; do
          curl -v http://localhost:5000 && break
          echo "Blazor app is not up yet. Retrying in 5 seconds..."
          sleep 5
        done

    - name: Print Blazor log
      run: cat blazor_app.log

    - name: Check listening ports
      run: netstat -tuln

    - name: Install Greenframe
      run: curl https://assets.greenframe.io/install.sh | bash

    - name: Analyze with Greenframe
      run: greenframe analyze
      env:
        GREENFRAME_SECRET_TOKEN: ${{ secrets.GREENFRAME_SECRET_TOKEN }}

    - name: Upload Greenframe results
      uses: actions/upload-artifact@v2
      with:
        name: greenframe-results
        path: greenframe-results/
